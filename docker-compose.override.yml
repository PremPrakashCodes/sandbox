# Development overrides for local development
# Automatically used by docker compose when present
# Usage: docker compose up (uses this file automatically)

services:
  postgres:
    # Expose postgres for development tools
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    # Remove resource limits for development
    deploy: {}
    # Add development-friendly logging
    command: >
      postgres -c log_statement=all -c log_destination=stderr

  redis:
    # Expose redis for development tools  
    ports:
      - "${REDIS_PORT:-6379}:6379"
    # Remove password requirement for development
    command: redis-server --appendonly yes --loglevel verbose
    # Remove resource limits for development
    deploy: {}

  backend:
    # Build development target
    build:
      target: development
    # Expose backend directly
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    # Enable debug mode
    environment:
      - DEBUG=true
      - LOG_LEVEL=debug
      - RELOAD=true
    # Mount source code for hot reload
    volumes:
      - ./apps/backend:/app
      - backend_venv:/app/.venv
    # Remove security restrictions for development
    read_only: false
    tmpfs: []
    security_opt: []
    deploy: {}
    # Override command for development
    command: uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug

  frontend:
    # Build development target
    build:
      target: development
    # Expose frontend directly
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    # Mount source code for hot reload
    volumes:
      - ./apps/frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    # Remove security restrictions for development
    read_only: false
    tmpfs: []
    security_opt: []
    deploy: {}
    # Override command for development
    command: npm run dev -- --turbopack
    # Add development environment variables
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000

  # Disable nginx in development
  nginx:
    profiles:
      - production

volumes:
  backend_venv:
    driver: local
  frontend_node_modules:
    driver: local
  frontend_next:
    driver: local
